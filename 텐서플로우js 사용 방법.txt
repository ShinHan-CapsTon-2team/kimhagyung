//기존 Keras 모델을 TF.js Layer 형식으로 변환하기
tensorflowjs_converter --input_format keras \ /lsy-one/lsy-one/src/model/model.h5 \ /lsy-one/lsy-one/src/model/tfjs_target_dir
npx tensorflowjs_converter --input_format keras c/lsy-one/lsy-one/src/model/model.h5 c/lsy-one/lsy-one/src/model/tfjs_target_dir

그 전에 npm install -g @tensorflow/tfjs-converter 이거 설치 했는데 만약 안된다면 
npm install -g @tensorflow/tfjs-converter 이걸 사용해서 글로벌로 설치되어있는지 확인(경로)

그래도 안된다면 


npm show @tensorflow/tfjs versions



pip install tensorflowjs 사용 만약 설치가 지연된다면 설치되어있는 텐서플로우를 제거하던가 
pip uninstall tensorflow
pip uninstall tensorflow-intel

pip install --upgrade pip 을 업그래이드 해준다. 

tensorflowjs_converter --input_format keras \
                       c/kimhagyung/model.h5 \
                       c/path/to/tfjs_target_dir

model.hdf5

tensorflowjs_converter --input_format keras \
                       C:\kimhagyung-main\kimhagyung-main\lsy-one\src\model\model.hfd5 \
                       C:\kimhagyung-main\tfjs_target_dir\

//numpy 다운그레이드
pip3 install numpy==1.23.5

pip install protobuf==3.19.0




npm install @tensorflow/tfjs-react-native




# ... (기존의 파이썬 코드)

# Keras 모델을 TensorFlow.js Layers Model 형식으로 저장
tfjs_layers_model_format = '../model/model_tfjs'
tfjs.converters.save_keras_model(model, tfjs_layers_model_format)

# 모델의 클래스 이름을 저장합니다
import json
class_names_json = json.dumps(class_names)
with open('../model/class_names.json', 'w') as f:
    f.write(class_names_json)



tensorflowjs_converter --input_format=keras /path/to/model.hdf5 /path/to/tfjs_model




학습할 때 오류 뜨면 
set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

